  
  //Simple vertical traversal 
  
  /*
  vector<int> verticalOrder(Node *root)
    {
        //Your code here
        vector<int> ans;
        // base case
        if(root == NULL){
            return ans;
        }
        
        // map<horizontal distance, list of nodes>
        map<int, vector<int> > nodes;
        
        // queue<node, horizontal distance>
        queue<pair<Node*, int> > q;
        
        q.push(make_pair(root,0));
        
        while(!q.empty())
        {
            pair<Node *, int > temp = q.front();
            q.pop();
            
            Node *node = temp.first;
            int hd = temp.second;

            nodes[hd].push_back(node->data);
            
            if(node->left){
                q.push(make_pair(node->left, hd-1));
            }
            
            if(node->right){
                q.push(make_pair(node->right, hd+1));
            }
        }
        
        for(auto i : nodes)
        {
            for(auto j : i.second)
            {
                    ans.push_back(j);
            }
        }
        return ans;
    }

    */